name: Continuous Deployment

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

env:
  AWS_REGION: us-east-1
  EKS_CLUSTER_NAME: pronas-pcd-cluster

jobs:
  deploy-to-production:
    name: Deploy to Production
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_PROD }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_PROD }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }} --region ${{ env.AWS_REGION }}

      - name: Deploy using kubectl
        run: |
          # Aqui vocÃª pode usar Helm, Kustomize ou kubectl apply
          # Exemplo com kubectl:
          kubectl apply -f infrastructure/k8s/namespaces/
          kubectl apply -f infrastructure/k8s/deployments/
          kubectl apply -f infrastructure/k8s/services/

          # ForÃ§ar o reinÃ­cio dos deployments para pegar a nova imagem (se usar 'latest' tag)
          kubectl rollout restart deployment -n pronas-pcd ai-service
          kubectl rollout restart deployment -n pronas-pcd auth-service
          # ... para os outros serviÃ§os

      - name: Verify deployment
        run: kubectl rollout status deployment/ai-service -n pronas-pcd --timeout=5m

      - name: Notify on Success
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'ðŸš€ Production deployment of version ${{ github.ref_name }} succeeded!'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify on Failure
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: 'ðŸš¨ Production deployment of version ${{ github.ref_name }} failed!'
          webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}